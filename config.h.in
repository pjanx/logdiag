/*
 * config.h.in
 *
 * Tries to fix various differences in compilers and libraries.
 *
 */

#ifndef __CONFIG_H__
#define __CONFIG_H__

#define PROJECT_NAME "${PROJECT_NAME}"
#define PROJECT_VERSION "${PROJECT_VERSION}"
#define PROJECT_ID "${project_ID}"
#define PROJECT_URL "${project_URL}"

#cmakedefine OPTION_NOINSTALL

#ifdef OPTION_NOINSTALL
	/* For developers. */
	#define PROJECT_DOC_DIR "${CMAKE_SOURCE_DIR}/docs/"
	#define PROJECT_SHARE_DIR "${CMAKE_SOURCE_DIR}/share/"
	#define PROJECT_GSETTINGS_DIR "${CMAKE_BINARY_DIR}"
#elif defined (_WIN32)
	#define PROJECT_DOC_DIR "share/doc/${PROJECT_NAME}/"
	#define PROJECT_SHARE_DIR "share/${PROJECT_NAME}/"
#else
	#define PROJECT_DOC_DIR "${CMAKE_INSTALL_PREFIX}/share/doc/${PROJECT_NAME}/"
	#define PROJECT_SHARE_DIR "${CMAKE_INSTALL_PREFIX}/share/${PROJECT_NAME}/"
#endif


#include <glib/gi18n.h>

#define GETTEXT_DOMAIN "${PROJECT_NAME}"
#ifdef _WIN32
	#define GETTEXT_DIRNAME "share/locale"
#else
	#define GETTEXT_DIRNAME "${CMAKE_INSTALL_PREFIX}/share/locale"
#endif


/* We have to remove nodes first due to a bug in json-glib. */
#define json_object_set_member(object, name, node) \
	G_STMT_START { \
		json_object_remove_member ((object), (name)); \
		json_object_set_member ((object), (name), (node)); \
	} G_STMT_END

#endif /* __CONFIG_H__ */

